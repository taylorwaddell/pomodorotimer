{"ast":null,"code":"import React from 'react';\n\nfunction TimeChangeButtons({\n  event,\n  setBreakTime,\n  setFocusTime\n}) {\n  let interval;\n  let max;\n  let min;\n  let changeTime;\n\n  if (event.target.name === \"focus\") {\n    interval = 5;\n    max = 60;\n    min = 5;\n    changeTime = setFocusTime;\n  } else {\n    interval = 1;\n    max = 15;\n    min = 1;\n    changeTime = setBreakTime;\n  }\n\n  ;\n\n  if (event.target.id === \"increase\") {\n    if (event.target.value === max) return;\n    return changeTime(current => current + interval);\n  } else {\n    if (event.target.value === min) return;\n    return changeTime(current => current - interval);\n  }\n\n  ;\n}\n\n_c = TimeChangeButtons;\nexport default TimeChangeButtons; // const handleTimeChange = (event) => {\n//     let interval;\n//     let max;\n//     let min;\n//     let changeTime;\n//     if (event.target.name === \"focus\") {\n//       interval = 5;\n//       max = 60;\n//       min = 5;\n//       changeTime = setFocusTime;\n//     } else {\n//       interval = 1;\n//       max = 15;\n//       min = 1;\n//       changeTime = setBreakTime;\n//     };\n//     if (event.target.id === \"increase\") {\n//       if (event.target.value === max) return;\n//       changeTime((current) => current + interval);\n//     } else {\n//       if (event.target.value === min) return;\n//       changeTime((current) => current - interval);\n//     }\n//   }\n\nvar _c;\n\n$RefreshReg$(_c, \"TimeChangeButtons\");","map":{"version":3,"sources":["/Users/twadd/DOCS/Thinkful/pomo-timer/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/TimeChangeButtons.js"],"names":["React","TimeChangeButtons","event","setBreakTime","setFocusTime","interval","max","min","changeTime","target","name","id","value","current"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,iBAAT,CAA2B;AAACC,EAAAA,KAAD;AAAQC,EAAAA,YAAR;AAAsBC,EAAAA;AAAtB,CAA3B,EAAgE;AAC5D,MAAIC,QAAJ;AACA,MAAIC,GAAJ;AACA,MAAIC,GAAJ;AACA,MAAIC,UAAJ;;AACA,MAAIN,KAAK,CAACO,MAAN,CAAaC,IAAb,KAAsB,OAA1B,EAAmC;AAC/BL,IAAAA,QAAQ,GAAG,CAAX;AACAC,IAAAA,GAAG,GAAG,EAAN;AACAC,IAAAA,GAAG,GAAG,CAAN;AACAC,IAAAA,UAAU,GAAGJ,YAAb;AACH,GALD,MAKO;AACHC,IAAAA,QAAQ,GAAG,CAAX;AACAC,IAAAA,GAAG,GAAG,EAAN;AACAC,IAAAA,GAAG,GAAG,CAAN;AACAC,IAAAA,UAAU,GAAGL,YAAb;AACH;;AAAA;;AACD,MAAID,KAAK,CAACO,MAAN,CAAaE,EAAb,KAAoB,UAAxB,EAAoC;AAChC,QAAIT,KAAK,CAACO,MAAN,CAAaG,KAAb,KAAuBN,GAA3B,EAAgC;AAChC,WAAOE,UAAU,CAAEK,OAAD,IAAaA,OAAO,GAAGR,QAAxB,CAAjB;AACH,GAHD,MAGO;AACH,QAAIH,KAAK,CAACO,MAAN,CAAaG,KAAb,KAAuBL,GAA3B,EAAgC;AAChC,WAAOC,UAAU,CAAEK,OAAD,IAAaA,OAAO,GAAGR,QAAxB,CAAjB;AACH;;AAAA;AAEJ;;KAxBQJ,iB;AA0BT,eAAeA,iBAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from 'react';\n\nfunction TimeChangeButtons({event, setBreakTime, setFocusTime}) {\n    let interval;\n    let max;\n    let min;\n    let changeTime;\n    if (event.target.name === \"focus\") {\n        interval = 5;\n        max = 60;\n        min = 5;\n        changeTime = setFocusTime;\n    } else {\n        interval = 1;\n        max = 15;\n        min = 1;\n        changeTime = setBreakTime;\n    };\n    if (event.target.id === \"increase\") {\n        if (event.target.value === max) return;\n        return changeTime((current) => current + interval);\n    } else {\n        if (event.target.value === min) return;\n        return changeTime((current) => current - interval);\n    };\n    \n}\n\nexport default TimeChangeButtons;\n\n// const handleTimeChange = (event) => {\n//     let interval;\n//     let max;\n//     let min;\n//     let changeTime;\n//     if (event.target.name === \"focus\") {\n//       interval = 5;\n//       max = 60;\n//       min = 5;\n//       changeTime = setFocusTime;\n//     } else {\n//       interval = 1;\n//       max = 15;\n//       min = 1;\n//       changeTime = setBreakTime;\n//     };\n//     if (event.target.id === \"increase\") {\n//       if (event.target.value === max) return;\n//       changeTime((current) => current + interval);\n//     } else {\n//       if (event.target.value === min) return;\n//       changeTime((current) => current - interval);\n//     }\n\n//   }"]},"metadata":{},"sourceType":"module"}