{"ast":null,"code":"import React from 'react';\n\nfunction converterFunc(timeInSeconds) {\n  const sec = parseInt(timeInSeconds, 10); // convert value to number if it's string\n\n  let hours = Math.floor(sec / 3600); // get hours\n\n  let minutes = Math.floor((sec - hours * 3600) / 60); // get minutes\n\n  let seconds = sec - hours * 3600 - minutes * 60; //  get seconds\n  // add 0 if value < 10; Example: 2 => 02\n\n  if (minutes < 10) {\n    minutes = \"0\" + minutes;\n  }\n\n  if (seconds < 10) {\n    seconds = \"0\" + seconds;\n  }\n\n  return `${minutes}:${seconds}`;\n}\n\nexport default converterFunc;","map":{"version":3,"sources":["/Users/twadd/DOCS/Thinkful/pomo-timer/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/converterFunc.js"],"names":["React","converterFunc","timeInSeconds","sec","parseInt","hours","Math","floor","minutes","seconds"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,aAAT,CAAuBC,aAAvB,EAAsC;AAClC,QAAMC,GAAG,GAAGC,QAAQ,CAACF,aAAD,EAAgB,EAAhB,CAApB,CADkC,CACO;;AACzC,MAAIG,KAAK,GAAKC,IAAI,CAACC,KAAL,CAAWJ,GAAG,GAAG,IAAjB,CAAd,CAFkC,CAEI;;AACtC,MAAIK,OAAO,GAAGF,IAAI,CAACC,KAAL,CAAW,CAACJ,GAAG,GAAIE,KAAK,GAAG,IAAhB,IAAyB,EAApC,CAAd,CAHkC,CAGqB;;AACvD,MAAII,OAAO,GAAGN,GAAG,GAAIE,KAAK,GAAG,IAAf,GAAwBG,OAAO,GAAG,EAAhD,CAJkC,CAImB;AACrD;;AACA,MAAIA,OAAO,GAAG,EAAd,EAAkB;AAACA,IAAAA,OAAO,GAAG,MAAIA,OAAd;AAAuB;;AAC1C,MAAIC,OAAO,GAAG,EAAd,EAAkB;AAACA,IAAAA,OAAO,GAAG,MAAIA,OAAd;AAAuB;;AAC1C,SAAQ,GAAED,OAAQ,IAAGC,OAAQ,EAA7B;AACH;;AAED,eAAeR,aAAf","sourcesContent":["import React from 'react';\n\nfunction converterFunc(timeInSeconds) {\n    const sec = parseInt(timeInSeconds, 10); // convert value to number if it's string\n    let hours   = Math.floor(sec / 3600); // get hours\n    let minutes = Math.floor((sec - (hours * 3600)) / 60); // get minutes\n    let seconds = sec - (hours * 3600) - (minutes * 60); //  get seconds\n    // add 0 if value < 10; Example: 2 => 02\n    if (minutes < 10) {minutes = \"0\"+minutes;}\n    if (seconds < 10) {seconds = \"0\"+seconds;}\n    return `${minutes}:${seconds}`\n}\n\nexport default converterFunc;"]},"metadata":{},"sourceType":"module"}