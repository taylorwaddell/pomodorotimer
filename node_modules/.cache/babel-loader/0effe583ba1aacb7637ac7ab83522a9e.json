{"ast":null,"code":"var _jsxFileName = \"/Users/twadd/DOCS/Thinkful/pomo-timer/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Converter.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Converter({\n  value\n}) {\n  const sec = parseInt(value, 10); // convert value to number if it's string\n\n  let hours = Math.floor(sec / 3600); // get hours\n\n  let minutes = Math.floor((sec - hours * 3600) / 60); // get minutes\n\n  let seconds = sec - hours * 3600 - minutes * 60; //  get seconds\n  // add 0 if value < 10; Example: 2 => 02\n\n  if (minutes < 10) {\n    minutes = \"0\" + minutes;\n  }\n\n  if (seconds < 10) {\n    seconds = \"0\" + seconds;\n  } // return hoursminutes+':'+seconds; // Return is HH : MM : SS\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [minutes, \":\", seconds, \" remaining\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Converter;\nexport default Converter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Converter\");","map":{"version":3,"sources":["/Users/twadd/DOCS/Thinkful/pomo-timer/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Converter.js"],"names":["React","Converter","value","sec","parseInt","hours","Math","floor","minutes","seconds"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,SAAT,CAAmB;AAACC,EAAAA;AAAD,CAAnB,EAA4B;AAEpB,QAAMC,GAAG,GAAGC,QAAQ,CAACF,KAAD,EAAQ,EAAR,CAApB,CAFoB,CAEa;;AACjC,MAAIG,KAAK,GAAKC,IAAI,CAACC,KAAL,CAAWJ,GAAG,GAAG,IAAjB,CAAd,CAHoB,CAGkB;;AACtC,MAAIK,OAAO,GAAGF,IAAI,CAACC,KAAL,CAAW,CAACJ,GAAG,GAAIE,KAAK,GAAG,IAAhB,IAAyB,EAApC,CAAd,CAJoB,CAImC;;AACvD,MAAII,OAAO,GAAGN,GAAG,GAAIE,KAAK,GAAG,IAAf,GAAwBG,OAAO,GAAG,EAAhD,CALoB,CAKiC;AACrD;;AACA,MAAIA,OAAO,GAAG,EAAd,EAAkB;AAACA,IAAAA,OAAO,GAAG,MAAIA,OAAd;AAAuB;;AAC1C,MAAIC,OAAO,GAAG,EAAd,EAAkB;AAACA,IAAAA,OAAO,GAAG,MAAIA,OAAd;AAAuB,GARtB,CASpB;;;AACJ,sBACI;AAAA,eACID,OADJ,OACcC,OADd;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;KAfQR,S;AAiBT,eAAeA,SAAf","sourcesContent":["import React from 'react';\n\nfunction Converter({value}) {\n    \n        const sec = parseInt(value, 10); // convert value to number if it's string\n        let hours   = Math.floor(sec / 3600); // get hours\n        let minutes = Math.floor((sec - (hours * 3600)) / 60); // get minutes\n        let seconds = sec - (hours * 3600) - (minutes * 60); //  get seconds\n        // add 0 if value < 10; Example: 2 => 02\n        if (minutes < 10) {minutes = \"0\"+minutes;}\n        if (seconds < 10) {seconds = \"0\"+seconds;}\n        // return hoursminutes+':'+seconds; // Return is HH : MM : SS\n    return (\n        <div>\n           {minutes}:{seconds} remaining\n        </div>\n    );\n}\n\nexport default Converter;"]},"metadata":{},"sourceType":"module"}